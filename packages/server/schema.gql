# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddJobPostingAddressInput {
  addressId: ID
  newAddress: AddressInput
}

input AddJobPostingInput {
  jobId: ID!
  address: AddJobPostingAddressInput!
  posting: JobPostingInput!
}

input AddressInput {
  phone: String
  street: String
  street2: String
  city: String!
  state: String!
  postal_code: String!
  country: String!
  coord_lat: Float!
  coord_lng: Float!
}

type CompanyAddressDto {
  phone: String!
  street: String!
  street2: String
  city: String!
  state: String!
  postal_code: String!
  country: String!
  coord_lat: Float!
  coord_lng: Float!
}

type CompanyDto {
  id: ID!
  name: String!
  slug: String!
  setup_complete: Boolean!
  setup_stage: Int!
}

type CompanyMemberDto {
  id: ID!
  role: RoleEnum!
  user: UserDto!
}

input CompanyMemberInput {
  userId: ID
  email: String!
  role: String!
}

input CompanyProfileInput {
  profile_image: String
  cover_image: String
  about: String!
  business_type: String!
}

input CoordsInput {
  lng: Float!
  lat: Float!
}

input CreateCompanyAddressInput {
  phone: String!
  street: String!
  street2: String
  city: String!
  state: String!
  postal_code: String!
  country: String!
  coord_lat: Float!
  coord_lng: Float!
}

type CreateCompanyDto {
  id: ID!
  name: String!
  slug: String!
  setup_complete: Boolean!
  setup_stage: Int!
  address: CompanyAddressDto!
}

input CreateCompanyInput {
  name: String!
  slug: String!
  address: CreateCompanyAddressInput!
}

type CreateCompanyProfileDto {
  id: ID!
  business_type: String!
  about: String!
  profile_image: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type EmployerCompanyDto {
  id: ID!
  name: String!
  slug: String!
  setup_complete: Boolean!
  setup_stage: Int!
  member: CompanyMemberDto!
}

input ForgotPasswordInput {
  email: String!
}

type JobAddressDto {
  id: ID!
  street: String!
  street2: String
  city: String!
  state: String!
  postal_code: String!
  country: String!
  coord_lat: Float!
  coord_lng: Float!
}

type JobDto {
  id: ID!
  companyName: String!
  name: String!
  slug: String!
  summary: String!
  description: String!
  created_at: DateTime!
  type: String!
  tags: [String!]!
  postings: [JobPostingDto!]!
}

input JobInput {
  name: String!
  summary: String!
  description: String!
  type: String!
  tags: [String!]
}

type JobPostingDto {
  id: ID!
  start_date: DateTime!
  end_date: DateTime!
  pay_rate: Int!
  total_openings: Int!
  remaining_openings: Int!
  apply_deadline: DateTime!
}

input JobPostingInput {
  start_date: DateTime!
  end_date: DateTime!
  pay_rate: String!
  total_openings: Int!
  apply_deadline: DateTime!
}

input LocationInput {
  locality: String!
  coords: CoordsInput!
}

input LoginInput {
  email: String!
  password: String!
}

type MemberCompanyDto {
  id: ID!
  role: RoleEnum!
  user: UserDto!
  company: CompanyDto!
}

type MeSessionDto {
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  realm: String!
  is_verified: Boolean!
  setup: [String!]!
  created_at: DateTime!
  search: SearchLocationDto
}

type Mutation {
  register(input: RegisterInput!): UserDto!
  login(input: LoginInput!): UserDto!
  logout: Boolean!
  forgotPassword(input: ForgotPasswordInput!): Boolean!
  createCompany(input: CreateCompanyInput!): CreateCompanyDto!
  updateCreateCompany(input: UpdateCompanyInput!, companySlug: String!): CreateCompanyDto!
  createCompanyProfile(input: CompanyProfileInput!, companySlug: String!): CreateCompanyProfileDto!
  updateCreateCompanyProfile(input: UpdateProfileInput!, companySlug: String!): CreateCompanyProfileDto!
  createCompanyAddMembers(input: [CompanyMemberInput!], companySlug: String!): Boolean!
  createJob(input: JobInput!, companySlug: String!): JobDto!
  createPosting(input: AddJobPostingInput!, companySlug: String!): JobPostingDto!
}

type Query {
  me: MeSessionDto
  allUsers: [UserDto!]!
  userLocation: SearchLocationDto
  findCompany(companySlug: String!): CompanyDto!
  generateCompanySlug(name: String!): String!
  companySlugAvailable(name: String!): String
  findCreateCompany(companySlug: String!): CreateCompanyDto!
  findCreateCompanyProfile(companySlug: String!): CreateCompanyProfileDto
  findCreateCompanyMembers(companySlug: String!): [CompanyMemberDto!]!
  findEmployerCompanies: [MemberCompanyDto!]!
  findEmployerCompany(companySlug: String!): EmployerCompanyDto!
  findAllJobs(companySlug: String!): [JobDto!]!
  findCurrentPostings(companySlug: String!): [JobPostingDto!]!
  findJobAddresses(companySlug: String!): [JobAddressDto!]!
  search(input: SearchInput!): SearchDto!
}

input RegisterInput {
  first_name: String!
  last_name: String!
  email: String!
  password: String!
}

enum RoleEnum {
  owner
  admin
  manager
  associate
}

type SearchCoordsDto {
  lng: Float!
  lat: Float!
}

type SearchDto {
  count: Int!
  results: [SearchResultsDto!]!
}

input SearchInput {
  search: String!
  location: LocationInput!
  options: SearchOptionsInput!
  pagination: SearchPaginationInput!
}

type SearchLocationDto {
  locality: String!
  coords: SearchCoordsDto!
}

input SearchOptionsInput {
  radius: Int!
  pay_rate: Int!
}

input SearchPaginationInput {
  skip: Int!
  take: Int!
}

type SearchResultsDto {
  job: JobDto!
  rank: Float!
}

input UpdateCompanyAddressInput {
  phone: String
  street: String
  street2: String
  city: String
  state: String
  postal_code: String
  country: String
  coord_lat: Float
  coord_lng: Float
}

input UpdateCompanyInput {
  name: String
  slug: String
  address: UpdateCompanyAddressInput
}

input UpdateProfileInput {
  id: ID!
  profile_image: String
  cover_image: String
  about: String
  business_type: String
}

type UserDto {
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  realm: String!
  is_verified: Boolean!
  setup: [String!]!
  created_at: DateTime!
}
