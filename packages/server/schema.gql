# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddJobInstanceAddressInput {
  companySlug: String!
  instanceId: ID!
  address: AddressInput!
}

input AddJobInstanceInput {
  companySlug: String!
  jobId: ID!
  instance: JobInstanceInput!
}

input AddressInput {
  phone: String
  street: String
  street2: String
  city: String!
  state: String!
  postal_code: String!
  country: String!
  coord_lat: Float!
  coord_lng: Float!
}

type CompanyDto {
  id: ID!
  name: String!
  slug: String!
  setup_complete: Boolean!
  setup_stage: Int!
}

input CompanyProfileInput {
  profile_image: String!
  cover_image: String!
  about: String!
  business_type: String!
}

input CoordsInput {
  lat: Float!
  lng: Float!
}

input CreateCompanyAddressInput {
  companySlug: String!
  address: AddressInput!
}

input CreateCompanyInput {
  name: String!
}

input CreateCompanyProfileInput {
  companySlug: String!
  profile: CompanyProfileInput!
}

input CreateJobInput {
  companySlug: String!
  job: JobInput!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input ForgotPasswordInput {
  email: String!
}

type JobDto {
  id: ID!
  name: String!
  slug: String!
}

input JobInput {
  name: String!
  summary: String!
  description: String!
  type: String!
  keywords: [String!]
}

input JobInstanceInput {
  start_date: DateTime!
  end_date: DateTime!
  pay_rate: String!
  total_openings: Int!
  apply_deadline: DateTime!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  register(input: RegisterInput!): UserDto!
  login(input: LoginInput!): UserDto!
  logout: Boolean!
  forgotPassword(input: ForgotPasswordInput!): Boolean!
  createCompany(input: CreateCompanyInput!): CompanyDto!
  createCompanyProfile(input: CreateCompanyProfileInput!): Boolean!
  createCompanyAddress(input: CreateCompanyAddressInput!): Boolean!
  createJob(input: CreateJobInput!): JobDto!
  addJobInstance(input: AddJobInstanceInput!): Boolean!
  addJobInstanceAddress(input: AddJobInstanceAddressInput!): Boolean!
}

type Query {
  me: UserDto
  allUsers: [UserDto!]!
  search(input: SearchInput!): Boolean!
}

input RegisterInput {
  first_name: String!
  last_name: String!
  email: String!
  password: String!
}

input SearchInput {
  keyword: String!
  location: CoordsInput!
  radius: Int!
}

type UserDto {
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  realm: String!
  is_verified: Boolean!
  setup: [String!]!
  created_at: DateTime!
}
